<Window x:Class="MIV.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:MIV.Views"
        xmlns:vm="clr-namespace:MIV.ViewModels"
        Title="MainWindow" Height="350" Width="525">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <GroupBox Header="操作" Style="{StaticResource baseStyle}">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Button Name="buttonAdd" Content="Add Book" Style="{StaticResource baseStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click" SourceName="buttonAdd">
                                <l:FolderBrowserDialogInteractionMessageAction>
                                    <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="FolderSelected">
                                        <l:FolderSelectionMessage Description="フォルダーの選択" DialogPreference="None"/>
                                    </l:DirectInteractionMessage>
                                </l:FolderBrowserDialogInteractionMessageAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Name="buttonPrev" Content="Prev" Style="{StaticResource baseStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GoPrev"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    </Button>
                    <Button Name="buttonNext" Content="Next" Style="{StaticResource baseStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GoNext"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Name="buttonUp" Content="Up" Style="{StaticResource baseStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GoUp"/>
                            </i:EventTrigger>
                         </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <!-- サムネイル用のスタイルを適用 -->
        <ListBox DockPanel.Dock="Top"
                 Style="{StaticResource listBoxThumbnailStyle}"
                 IsSynchronizedWithCurrentItem="True"
                 ItemsSource="{Binding Node.Children}"
                 SelectedItem="{Binding SelectedItem}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <ei:CallMethodAction 
                        TargetObject="{Binding Mode=Oneway, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=DataContext}" 
                        MethodName="Selected"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                      Style="{StaticResource viewerStyle}">
            <Image Source="{Binding Node.Children/Path}" Stretch="None"/>       
        </ScrollViewer>
    </DockPanel>

    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Image x:Name="image" Grid.Row="3"  HorizontalAlignment="Left" VerticalAlignment="Top" Source="{Binding Node.Path}" Margin="0,33,0,0" Grid.RowSpan="2"/>

        <ListView x:Name="changed" Grid.Row="1" ItemsSource="{Binding Node.Children }"  SelectionMode="Single">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Path" Width="517">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Menu Grid.RowSpan="1" Grid.Row="0">
            <MenuItem Header="次へ(_N)" x:Name="Next" IsEnabled="{Binding Node.HasNext, Mode=OneWay}"/>
            <MenuItem Header="開く(_O)"  x:Name="Open" IsEnabled="{Binding Node.IsDir, Mode=OneWay}"/>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click" SourceName="Next" > 
                    <l:ConfirmationDialogInteractionMessageAction >
                        <l:DirectInteractionMessage CallbackCommand="{Binding NextCommand}">
                            <l:ConfirmationMessage Button="OKCancel" 
                                                    Caption="確認"
                                                    Text="次行く？"
                                                    Image="Information"/>
                        </l:DirectInteractionMessage>
                    </l:ConfirmationDialogInteractionMessageAction>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click" SourceName="Open">
                        <l:FolderBrowserDialogInteractionMessageAction>
                            <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="FolderSelected">
                                <l:FolderSelectionMessage Description="フォルダーの選択" DialogPreference="None"/>
                            </l:DirectInteractionMessage>
                        </l:FolderBrowserDialogInteractionMessageAction>
                    </i:EventTrigger>
            </i:Interaction.Triggers>
        </Menu>
    </Grid>-->
</Window>
